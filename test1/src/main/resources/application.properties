spring.application.name=test1
spring.config.import=optional:configserver:http://localhost:8070

spring.cloud.openfeign.circuitbreaker.enabled=true

# how many request will be checked before circuit breaker state changes to open
resilience4j.circuitbreaker.configs.default.sliding-window-size=10
# how many request will be checked in half open state
resilience4j.circuitbreaker.configs.default.permitted-number-of-calls-in-half-open-state=2
# how much request percentage is getting failed, will be used as threshold for circuit breaker transition
resilience4j.circuitbreaker.configs.default.failure-rate-threshold=50
# how many seconds circuit breaker will wait in open state for a service to be ready
resilience4j.circuitbreaker.configs.default.wait-duration-in-open-state.seconds=10

# these properties to set retry configuration for test1
#resilience4j.retry.configs.default.max-attempts=3
#resilience4j.retry.configs.default.wait-duration.seconds=1
#resilience4j.retry.configs.default.enable-exponential-backoff=true
#resilience4j.retry.configs.default.exponential-backoff-multiplier=2


#actuator all endpoints expose
management.endpoints.web.exposure.include=*

management.info.env.enabled=true
management.health.readinessstate.enabled=true
management.health.livenessstate.enabled=true
management.endpoint.health.probes.enabled=true
management.endpoint.shutdown.enabled=true

endpoints.shutdown.enabled=true

# to store entry with unique value. ip address is unique
eureka.instance.prefer-ip-address=true
#eureka.instance.hostname=localhost
eureka.client.fetch-registry=true
eureka.client.register-with-eureka=true
eureka.client.service-url.defaultZone=http://localhost:8090/eureka/

# these info can't be reachable inside docker container as
# we are using eureka.instance.prefer-ip-address=true
info.app.name=test1
info.app.version=1.0
info.app.description=an app to test some spring features

server.port=8080

logging.level.com.example.test1 = debug